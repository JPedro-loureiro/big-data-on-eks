apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaConnector
metadata:
  name: sync-iceberg-tpch-postgres
  labels:
    # The strimzi.io/cluster label identifies the KafkaConnect instance
    # in which to create this connector. That KafkaConnect instance
    # must have the strimzi.io/use-connector-resources annotation
    # set to true.
    strimzi.io/cluster: main-kafka-connect-cluster
spec:
  class: io.tabular.iceberg.connect.IcebergSinkConnector
  tasksMax: 2
  config:
    iceberg.catalog.catalog-impl: org.apache.iceberg.aws.glue.GlueCatalog
    iceberg.catalog.warehouse: "s3://datalake-bronze-590183863248"
    iceberg.catalog.io-impl: org.apache.iceberg.aws.s3.S3FileIO
    iceberg.tables.auto-create-enabled: true
    iceberg.tables.evolve-schema-enabled: true
    iceberg.control.commit.interval-ms: 300000
    iceberg.writer.batch-size-bytes: 10485760
    iceberg.writer.max-file-size-bytes: 134217728
    iceberg.writer.target-file-size-bytes: 134217728
    key.converter: org.apache.kafka.connect.storage.StringConverter
    value.converter: org.apache.kafka.connect.json.JsonConverter
    value.converter.schemas.enable: false
    topics: >-
      tpch_postgres.public.orders
    iceberg.tables: >-
      datalake_bronze.orders